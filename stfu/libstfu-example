#!/usr/bin/python3

from sys import argv
from libstfu.core import *

if (len(argv) < 2):
    print("usage: {} <NAND dump>".format(argv[0]))
    exit()

# Create an instance of the emulator
emu = Starlet()
stfu_register_sigint_handler(emu)

# Example: a full system configuration requires the following:
#   - A NAND dump
#   - An OTP memory dump
#   - A copy of the boot ROM (boot0)

emu.load_boot0("boot0.bin")
emu.load_nand_file(argv[1])
emu.load_otp("otp.bin")

# Example: pre-configure memory and/or machine state
#emu.write16(0x0d403d94, 0x4770) # skyeye boot1 sleep() patch

# Example: add breakpoints/logging to certain code regions
#emu.add_code_logrange(0x0d400000, 0x0d402000)
#emu.add_code_logrange(0x00000000, 0x00030000)
#emu.add_code_logrange(0xffff2000, 0xffffffff)

#emu.add_mem_logrange(0x0d410000, 0x0d420000)
#emu.add_breakpoint(0xfff00000)

# Example: load and start an arbitrary binary at some address
# You can also load symbols to annotate logging/disassembly
#emu.load_code_file(argv[1], 0x0d400000)
#emu.load_symbols("boot1c.csv")

# Start emulation
emu.boot()

